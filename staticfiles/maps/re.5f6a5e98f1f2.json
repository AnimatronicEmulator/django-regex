{
    "Common Tokens": {
        "id": "common-tokens",
        "1": {
            "token": ".",
            "description": "Any character except newline"
        },
        "2": {
            "token": "a",
            "description": "The character 'a'"
        },
        "3": {
            "token": "ab",
            "description": "The string 'ab'"
        },
        "4": {
            "token": "a|b",
            "description": "The character 'a' or 'b'"
        },
        "5": {
            "token": "*a",
            "description": "0 or more characters 'a'"
        },
        "6": {
            "token": "\\",
            "description": "Escapes a special character"
        }
    },
    "Quantifiers": {
        "id": "quantifiers",
        "1": {
            "token": "*",
            "description": "0 or more"
        },
        "2": {
            "token": "+",
            "description": "1 or more"
        },
        "3": {
            "token": "?",
            "description": "0 or 1"
        },
        "4": {
            "token": "{2}",
            "description": "Exactly 2"
        },
        "5": {
            "token": "{2,5}",
            "description": "Between 2 and 5"
        },
        "6": {
            "token": "{2,}",
            "description": "2 or more"
        },
        "7": {
            "token": "(,5}",
            "description": "Up to 5"
        }
    },
    "Groups": {
        "id": "groups",
        "1": {
            "token": "(...)",
            "description": "Capturing group"
        },
        "2": {
            "token": "(?P<foo>)",
            "description": "Capturing group named 'foo'"
        },
        "3": {
            "token": "(?:...)",
            "description": "Non-capturing group"
        },
        "4": {
            "token": "\\Y",
            "description": "Match the Y'th captured group"
        },
        "5": {
            "token": "(?P=foo)",
            "description": "Match the named group 'foo'"
        },
        "6": {
            "token": "(?#...)",
            "description": "Comment"
        }
    },
    "Character Classes": {
        "id": "character-classes",
        "1": {
            "token": "[ad-f]",
            "description": "One character of: a, d, e, f"
        },
        "2": {
            "token": "[^ad-f]",
            "description": "One character except: a, d, e, f"
        },
        "3": {
            "token": "\\s",
            "description": "Any whitespace character"
        },
        "4": {
            "token": "\\S",
            "description": "Any non-whitespace character"
        },
        "5": {
            "token": "\\d",
            "description": "Any digit"
        },
        "6": {
            "token": "\\D",
            "description": "Any non-digit"
        },
        "7": {
            "token": "\\w",
            "description": "Any word character"
        },
        "8": {
            "token": "\\W",
            "description": "Any non-word character"
        }
    },
    "Assertions": {
        "id": "assertions",
        "1": {
            "token": "^",
            "description": "Start of string"
        },
        "2": {
            "token": "$",
            "description": "End of string"
        },
        "3": {
            "token": "\\b",
            "description": "Any word boundary"
        },
        "4": {
            "token": "\\B",
            "description": "Any non-word boundary"
        },
        "5": {
            "token": "(?=...)",
            "description": "Positive lookahead"
        },
        "6": {
            "token": "(?!...)",
            "description": "Negative lookahead"
        },
        "7": {
            "token": "(?<=...)",
            "description": "Positive lookbehind"
        },
        "8": {
            "token": "(?(foo)yes|no)",
            "description": "Conditional match for capturing group 'foo'"
        }
    },
    "Flags": {
        "id": "flags",
        "1": {
            "token": "(?aiLmsux)",
            "description": "One or more letters from the flags below"
        },
        "2": {
            "token": "(?a)",
            "description": "ASCII-only matching"
        },
        "3": {
            "token": "(?i)",
            "description": "Ignore case"
        },
        "4": {
            "token": "(?L)",
            "description": "Locale dependent"
        },
        "5": {
            "token": "(?m)",
            "description": "Multi-line"
        },
        "6": {
            "token": "(?s)",
            "description": "dot matches all"
        },
        "7": {
            "token": "(?u)",
            "description": "Unicode matching"
        },
        "8": {
            "token": "(?x)",
            "description": "Verbose"
        }
    },
    "Special Characters": {
        "id": "special-characters",
        "1": {
            "token": "\\n",
            "description": "Newline"
        },
        "2": {
            "token": "\\r",
            "description": "Carriage return"
        },
        "3": {
            "token": "\\t",
            "description": "Tab"
        },
        "4": {
            "token": "\\YYY",
            "description": "Octal character 'YYY'"
        },
        "5": {
            "token": "\\xYY",
            "description": "Hexadecimal character 'YY'"
        }
    },
    "Replacement": {
        "id": "replacement",
        "1": {
            "token": "\\g<0>",
            "description": "Insert entire match"
        },
        "2": {
            "token": "\\g<foo>",
            "description": "Insert match 'foo'"
        },
        "3": {
            "token": "\\Y",
            "description": "Insert group numbered Y"
        }
    }
}